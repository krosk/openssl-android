name: Android release

env:
  DEFAULT_RELEASE: 'latest'

on:
  push:
  
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (no space)'
        required: true
        default: 'latest'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get -yqq update
        sudo apt-get -ym install curl expect git libc6:i386 libgcc1:i386 libncurses5:i386 libstdc++6:i386 zlib1g:i386 openjdk-8-jdk wget unzip vim make subversion zip

    - name: Setup Android SDK environment variables
      run: |
        echo "ANDROID_HOME=/opt/android-sdk-linux" >> $GITHUB_ENV
        echo "ANDROID_SDK_HOME=/opt/android-sdk-linux" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=/opt/android-sdk-linux" >> $GITHUB_ENV
        echo "ANDROID_SDK=/opt/android-sdk-linux" >> $GITHUB_ENV

    - name: Create working directory for next steps
      run: |
        sudo mkdir /opt/android-sdk-linux
        sudo chown -R runner /opt/android-sdk-linux
        sudo chgrp -R docker /opt/android-sdk-linux
        sudo chown -R runner $GITHUB_WORKSPACE
        sudo chown -R docker $GITHUB_WORKSPACE

    - name: Install Android SDK tools
      working-directory: /opt/android-sdk-linux
      run: |
        wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
        unzip commandlinetools-linux-7583922_latest.zip
        rm commandlinetools-linux-7583922_latest.zip
        mv cmdline-tools latest
        mkdir cmdline-tools 
        mv latest cmdline-tools/latest
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH

    # licenses required for Android SDK must be found somewhere; them being rather simple they are hardcoded here, but they could also be stored as files
    - name: Setup licenses files for Android SDK
      working-directory: /opt/android-sdk-linux
      run: |
        mkdir licenses
        echo "\n8933bad161af4178b1185d1a37fbf41ea5269c55\n24333f8a63b6825ea9c5514f83c2829b004d1fee" >> licenses/android-sdk-license
        echo "\n84831b9409646a918e30573bab4c9c91346d8abd" >> licenses/android-sdk-preview-license

    - name: Install Android SDK dependencies
      working-directory: /opt/android-sdk-linux
      run: |
        yes | sdkmanager --install "platform-tools"
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
        yes | sdkmanager --install "build-tools;30.0.3"
        echo "$ANDROID_HOME/build-tools/30.0.3" >> $GITHUB_PATH
        yes | sdkmanager --install "cmake;3.18.1"
        echo "$ANDROID_HOME/cmake/3.18.1/bin" >> $GITHUB_PATH
        yes | sdkmanager --install "ndk;23.0.7599858"
        echo "$ANDROID_HOME/ndk/23.0.7599858" >> $GITHUB_PATH
        echo "$ANDROID_HOME/ndk/23.0.7599858/toolchains/llvm/prebuilt/linux-x86_64/bin/" >> $GITHUB_PATH
        ln -s llvm-objdump ${ANDROID_HOME}/ndk/23.0.7599858/toolchains/llvm/prebuilt/linux-x86_64/bin/objdump

    - name: Setup licenses for SDK
      run: |
        ln -s $ANDROID_HOME/licenses $GITHUB_WORKSPACE/.github/licenses

    - name: Build library
      run: |
        ./compile.sh

    - name: Package library
      uses: TheDoctor0/zip-release@0.6.0
      with:
        type: zip
        filename: libopenssl-android-all-${{ github.event.inputs.release_version || env.DEFAULT_RELEASE }}.zip
        directory: ./release

    - name: Tag Repo
      uses: richardsimko/update-tag@v1
      with:
        tag_name: Android-${{ github.event.inputs.release_version || env.DEFAULT_RELEASE }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update binaries of release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: release/libopenssl-android-all-${{ github.event.inputs.release_version || env.DEFAULT_RELEASE }}.zip
        asset_name: libopenssl-android-all-${{ github.event.inputs.release_version || env.DEFAULT_RELEASE }}.zip
        tag: Android-${{ github.event.inputs.release_version || env.DEFAULT_RELEASE }}
        overwrite: true